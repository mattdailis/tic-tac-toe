{"version":3,"sources":["canvas.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["CanvasContainer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateAnimationState","setState","prevState","n","rAF","requestAnimationFrame","click","pt","x_next","state","moves","length","player","move","x","Math","floor","y","type","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","prevMove","value","err","return","concat","message","ws","send","JSON","stringify","moveCenter","displacement","center","console","log","window","location","scale","WebSocket","host","_this2","onopen","onmessage","evt","parse","data","game_id","onclose","cancelAnimationFrame","react_default","a","createElement","canvas_Canvas","React","Component","Canvas","_this3","canvasRef","createRef","mouseDown","mouseMoved","delta","previousTouch","initialOffset","innerWidth","innerHeight","e","movementX","movementY","phys_to_log","clientX","clientY","preventDefault","dx","touches","dy","deltaY","ref","onMouseDown","handleMouseDown","bind","onMouseMove","handleMouseMove","onMouseUp","handleMouseUp","onTouchStart","handleTouchStart","onTouchMove","handleTouchMove","onTouchEnd","handleTouchEnd","onDoubleClick","handleDoubleClick","onWheel","handleWheel","draw","canvas","current","width","height","ctx","getContext","beginPath","moveTo","lineTo","stroke","_this$log_to_phys","log_to_phys","fillStyle","fillRect","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","nearScreen","_this$log_to_phys2","k","arc","PI","_this$state","_this$state2","topLeft","topRight","bottomLeft","bottomRight","onScreen","_this$log_to_phys3","App","Boolean","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+NA2BMA,cAEJ,SAAAA,EAAYC,GAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACvBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KA4CRQ,qBAAuB,WACrBP,EAAKQ,SAAS,SAAAC,GAAS,MAAK,CAAEC,EAAGD,EAAUC,KAC3CV,EAAKQ,SAAS,CAACG,IAAKC,sBAAsBZ,EAAKO,yBA/CxBP,EAwDzBa,MAAQ,SAACC,GACP,IAAIC,GAAS,EACTf,EAAKgB,MAAMC,MAAMC,OAAS,GAA6D,KAAxDlB,EAAKgB,MAAMC,MAAMjB,EAAKgB,MAAMC,MAAMC,OAAS,GAAGC,SAC/EJ,GAAS,GAEX,IAAMK,EAAc,CAClBD,OAAQJ,EAAS,IAAM,IACvBM,EAAGC,KAAKC,MAAMT,EAAGO,EAAI,IACrBG,EAAGF,KAAKC,MAAMT,EAAGU,EAAI,IACrBC,KAAM,WAToBC,GAAA,EAAAC,GAAA,EAAAC,OAAAC,EAAA,IAa5B,QAAAC,EAAAC,EAAqB/B,EAAKgB,MAAMC,MAAhCe,OAAAC,cAAAP,GAAAI,EAAAC,EAAAG,QAAAC,MAAAT,GAAA,EAAuC,KAA9BU,EAA8BN,EAAAO,MACrC,GAAIf,KAAKC,MAAMa,EAASf,EAAI,KAAQC,KAAKC,MAAMH,EAAKC,EAAI,KACpDC,KAAKC,MAAMa,EAASZ,EAAI,KAAQF,KAAKC,MAAMH,EAAKI,EAAI,IAClD,QAhBoB,MAAAc,GAAAX,GAAA,EAAAC,EAAAU,EAAA,YAAAZ,GAAA,MAAAK,EAAAQ,QAAAR,EAAAQ,SAAA,WAAAZ,EAAA,MAAAC,GAoB5B5B,EAAKQ,SAAS,CACZS,MAAOjB,EAAKgB,MAAMC,MAAMuB,OAAO,CAACpB,MAGlC,IAAMqB,EAAU,CACdtB,OAAQC,EAAKD,OACbE,EAAGD,EAAKC,EACRG,EAAGJ,EAAKI,GAEVxB,EAAKgB,MAAM0B,GAAGC,KAAKC,KAAKC,UAAUJ,KArFXzC,EAiGzB8C,WAAa,SAACC,GACZ/C,EAAKQ,SAAS,CACZwC,OAAQ,CACN3B,EAAGrB,EAAKgB,MAAMgC,OAAO3B,EAAI0B,EAAa1B,EACtCG,EAAGxB,EAAKgB,MAAMgC,OAAOxB,EAAIuB,EAAavB,EACtCC,KAAM,cApGVwB,QAAQC,IAAIC,OAAOC,UACnBpD,EAAKgB,MAAQ,CACXN,EAAG,EACHC,IAAK,KACLqC,OAAQ,CACN3B,EAAG,EAAGG,EAAG,EAAGC,KAAM,WAEpB4B,MAAO,EACPpC,MAAO,CAAC,CACNE,OAAQ,IACRE,EAAG,EACHG,EAAG,EACHC,KAAM,YAERiB,GAAI,IAAIY,UAAU,QAAUH,OAAOC,SAASG,KAAO,QAhB9BvD,mFAoBL,IAAAwD,EAAArD,KAEVuC,EAAOvC,KAAKa,MAAZ0B,GAERA,EAAGe,OAAS,WACVR,QAAQC,IAAI,cAGdR,EAAGgB,UAAY,SAAAC,GACb,IAAMlB,EAAUG,KAAKgB,MAAMD,EAAIE,MACd5C,GAAUwB,EAAnBqB,QAAmBrB,EAAVxB,OACjBuC,EAAKhD,SAAS,CAACS,MAAQA,KAGzByB,EAAGqB,QAAU,WACXd,QAAQC,IAAI,gBAEZM,EAAKhD,SAAS,CACZkC,GAAI,IAAIY,UAAU,QAAUH,OAAOC,SAASG,KAAO,yDAahC,OAAnBpD,KAAKa,MAAML,KACbqD,qBAAqB7D,KAAKa,MAAML,sCAqClC,OAAOsD,EAAAC,EAAAC,cAACC,EAAD,CACCf,MAAOlD,KAAKa,MAAMqC,MAClBL,OAAQ7C,KAAKa,MAAMgC,OACnBF,WAAY3C,KAAK2C,WACjB7B,MAAOd,KAAKa,MAAMC,MAClBJ,MAAOV,KAAKU,eAhGMwD,IAAMC,WA+H9BC,cAOJ,SAAAA,EAAYxE,GAAoB,IAAAyE,EAAA,OAAAvE,OAAAC,EAAA,EAAAD,CAAAE,KAAAoE,IAC9BC,EAAAvE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsE,GAAAjE,KAAAH,KAAMJ,KACDiB,MAAQ,CACXyD,UAAWJ,IAAMK,YACjBC,WAAW,EACXC,YAAY,EACZC,MAAO,GACPC,cAAe,KACfC,cAAe,CACb1D,EAAG8B,OAAO6B,WAAa,EACvBxD,EAAG2B,OAAO8B,YAAc,EACxBxD,KAAM,aAXoB+C,iFAiB9BrE,KAAKK,SAAS,CAACmE,WAAW,EAAMC,YAAY,4CAG9BM,GACd/E,KAAKK,SAAS,CAACoE,YAAY,IACvBzE,KAAKa,MAAM2D,WACbxE,KAAKJ,MAAM+C,WAAW,CAACzB,EAAG6D,EAAEC,UAAYhF,KAAKa,MAAM6D,MAAOrD,EAAG0D,EAAEE,UAAYjF,KAAKa,MAAM6D,MAAOpD,KAAM,kDAIzFyD,GACZ/E,KAAKK,SAAS,CAACmE,WAAW,8CAGVO,GAEhB/E,KAAKJ,MAAMc,MAAMV,KAAKkF,YAAY,CAChChE,EAAG6D,EAAEI,QACL9D,EAAG0D,EAAEK,QACL9D,KAAM,sDAKMyD,GAGd,GAFA/E,KAAKK,SAAS,CAACoE,YAAY,IAC3BM,EAAEM,iBAC8B,MAA5BrF,KAAKa,MAAM8D,cAAuB,CACpC,IAAMW,EAAKP,EAAEQ,QAAQ,GAAGJ,QAAUnF,KAAKa,MAAM8D,cAAczD,EACrDsE,EAAKT,EAAEQ,QAAQ,GAAGH,QAAUpF,KAAKa,MAAM8D,cAActD,EAC3DrB,KAAKK,SAAS,CAACsE,cAAgB,CAC7BzD,EAAG6D,EAAEQ,QAAQ,GAAGJ,QAChB9D,EAAG0D,EAAEQ,QAAQ,GAAGH,QAChB9D,KAAM,cAERtB,KAAKJ,MAAM+C,WAAW,CACpBzB,EAAQ,EAALoE,EAAWtF,KAAKa,MAAM6D,MACzBrD,EAAQ,EAALmE,EAAWxF,KAAKa,MAAM6D,MACzBpD,KAAM,iBAGRtB,KAAKK,SAAS,CAACsE,cAAgB,CAC7BzD,EAAG6D,EAAEQ,QAAQ,GAAGJ,QAChB9D,EAAG0D,EAAEQ,QAAQ,GAAGH,QAChB9D,KAAM,uDAMKyD,GACf/E,KAAKK,SAAS,CAACsE,cAAgB,CAC7BzD,EAAG6D,EAAEQ,QAAQ,GAAGJ,QAChB9D,EAAG0D,EAAEQ,QAAQ,GAAGH,QAChB9D,KAAM,qDAIKyD,GACb/E,KAAKK,SAAS,CAACsE,cAAgB,OAC1B3E,KAAKa,MAAM4D,YAA0C,MAA5BzE,KAAKa,MAAM8D,eACvC3E,KAAKJ,MAAMc,MAAMV,KAAKkF,YAAY,CAChChE,EAAGlB,KAAKa,MAAM8D,cAAczD,EAC5BG,EAAGrB,KAAKa,MAAM8D,cAActD,EAC5BC,KAAM,kDAKAyD,GACNA,EAAEU,OAAS,EACbzF,KAAKK,SAAS,CAACqE,MAAO1E,KAAKa,MAAM6D,MAAQ,IAChCK,EAAEU,OAAS,GAAKzF,KAAKa,MAAM6D,MAAQ,IAC5C1E,KAAKK,SAAS,CAACqE,MAAO1E,KAAKa,MAAM6D,MAAQ,qCAK3C,OAAOZ,EAAAC,EAAAC,cAAA,UACC0B,IAAK1F,KAAKa,MAAMyD,UAChBqB,YAAa3F,KAAK4F,gBAAgBC,KAAK7F,MACvC8F,YAAa9F,KAAK+F,gBAAgBF,KAAK7F,MACvCgG,UAAWhG,KAAKiG,cAAcJ,KAAK7F,MACnCkG,aAAclG,KAAKmG,iBAAiBN,KAAK7F,MACzCoG,YAAapG,KAAKqG,gBAAgBR,KAAK7F,MACvCsG,WAAYtG,KAAKuG,eAAeV,KAAK7F,MACrCwG,cAAexG,KAAKyG,kBAAkBZ,KAAK7F,MAC3C0G,QAAS1G,KAAK2G,YAAYd,KAAK7F,oDAKvCA,KAAK4G,oDAGL5G,KAAK4G,sCAIL,IAAMC,EAAS7G,KAAKa,MAAMyD,UAAUwC,QACpC,GAAc,MAAVD,EAAJ,CACAA,EAAOE,MAAQ/D,OAAO6B,WACtBgC,EAAOG,OAAShE,OAAO8B,YACvB,IAAMmC,EAAMJ,EAAOK,WAAW,MAC9B,GAAW,MAAPD,EAAJ,CAMA,IAZK,IAQGpE,EAAW7C,KAAKJ,MAAhBiD,OAEF6B,EAAQ1E,KAAKa,MAAM6D,MAAQ1E,KAAKJ,MAAMsD,MAEnChC,GAAK2B,EAAO3B,EAAI,EAAI,IAAOwD,EAAQ1E,KAAKa,MAAM+D,cAAc1D,EAAIwD,EAAOxD,EAAI2F,EAAOE,MAAO7F,GAAKwD,EACrGuC,EAAIE,YACJF,EAAIG,OAAOlG,EAAG,GACd+F,EAAII,OAAOnG,EAAG2F,EAAOG,QACrBC,EAAIK,SAEN,IAAK,IAAIjG,GAAKwB,EAAOxB,EAAI,EAAI,IAAOqD,EAAQ1E,KAAKa,MAAM+D,cAAcvD,EAAIqD,EAAQrD,EAAIwF,EAAOG,OAAQ3F,GAAKqD,EACvGuC,EAAIE,YACJF,EAAIG,OAAO,EAAG/F,GACd4F,EAAII,OAAOR,EAAOE,MAAO1F,GACzB4F,EAAIK,SAGN,GAAItH,KAAKJ,MAAMkB,MAAMC,OAAS,EAAG,KAAAwG,EAChBvH,KAAKwH,YAAYxH,KAAKJ,MAAMkB,MAAMd,KAAKJ,MAAMkB,MAAMC,OAAS,IAApEG,EADwBqG,EACxBrG,EAAGG,EADqBkG,EACrBlG,EACV4F,EAAIQ,UAAY,UAChBR,EAAIS,SAAS,EAAIxG,EAAIwD,EAAQ,EAAG,EAAIrD,EAAIqD,EAAQ,EAAGA,EAAQ,EAAGA,EAAQ,GA5BnE,IAAAiD,GAAA,EAAAC,GAAA,EAAAC,OAAAnG,EAAA,IA+BL,QAAAoG,EAAAC,EAAe/H,KAAKJ,MAAMkB,MAA1Be,OAAAC,cAAA6F,GAAAG,EAAAC,EAAAhG,QAAAC,MAAA2F,GAAA,EAAiC,KAAxBhH,EAAwBmH,EAAA5F,MAC/B,GAAKlC,KAAKgI,WAAWrH,GAArB,CAD+B,IAAAsH,EAEhBjI,KAAKwH,YAAY7G,GAAzBO,EAFwB+G,EAExB/G,EAAGG,EAFqB4G,EAErB5G,EACJ6G,EAAI,GAAKxD,EAAM,GAEJ,KAAb/D,EAAGK,QACLiG,EAAIE,YACJF,EAAIG,OAAOlG,EAAIgH,EAAG7G,EAAI6G,GACtBjB,EAAII,OAAOnG,EAAIgH,EAAG7G,EAAI6G,GAEtBjB,EAAIG,OAAOlG,EAAIgH,EAAG7G,EAAI6G,GACtBjB,EAAII,OAAOnG,EAAIgH,EAAG7G,EAAI6G,GACtBjB,EAAIK,UACkB,KAAb3G,EAAGK,SACZiG,EAAIE,YACJF,EAAIkB,IAAIjH,EAAGG,EAAG,GAAMqD,EAAO,EAAG,EAAIvD,KAAKiH,IACvCnB,EAAIK,YA/CH,MAAAnF,GAAAyF,GAAA,EAAAC,EAAA1F,EAAA,YAAAwF,GAAA,MAAAI,EAAA3F,QAAA2F,EAAA3F,SAAA,WAAAwF,EAAA,MAAAC,0CAoDKlH,GAAiC,IACpCkC,EAAU7C,KAAKJ,MAAfiD,OADoCwF,EAEZrI,KAAKa,MAA7B6D,EAFoC2D,EAEpC3D,MAAOE,EAF6ByD,EAE7BzD,cAEd,OAAc,MADC5E,KAAKa,MAAMyD,UAAUwC,QACT,CAAC5F,EAAG,EAAGG,EAAG,EAAGC,KAAM,YAEvC,CACLJ,GAAI2B,EAAO3B,EAAIP,EAAGO,GAAKwD,EAAQE,EAAc1D,EAC7CG,GAAIwB,EAAOxB,EAAIV,EAAGU,GAAKqD,EAAQE,EAAcvD,EAC7CC,KAAM,gDAIEX,GAAiC,IACpCkC,EAAU7C,KAAKJ,MAAfiD,OADoCyF,EAEZtI,KAAKa,MAA7B6D,EAFoC4D,EAEpC5D,MAAOE,EAF6B0D,EAE7B1D,cAEd,OAAc,MADC5E,KAAKa,MAAMyD,UAAUwC,QACT,CAAC5F,EAAG,EAAGG,EAAG,EAAGC,KAAM,WAEvC,CACLJ,GAAKP,EAAGO,EAAI0D,EAAc1D,GAAKwD,EAAS7B,EAAO3B,EAC/CG,GAAKV,EAAGU,EAAIuD,EAAcvD,GAAKqD,EAAS7B,EAAOxB,EAC/CC,KAAM,8CAICX,GACT,IAAM4H,EAAwB,CAC5BrH,EAAGP,EAAGO,EAAI,GACVG,EAAGV,EAAGU,EAAI,GACVC,KAAM,WAEFkH,EAAyB,CAC7BtH,EAAGP,EAAGO,EAAI,GACVG,EAAGV,EAAGU,EAAI,GACVC,KAAM,WAEFmH,EAA2B,CAC/BvH,EAAGP,EAAGO,EAAI,GACVG,EAAGV,EAAGU,EAAI,GACVC,KAAM,WAEFoH,EAA4B,CAChCxH,EAAGP,EAAGO,EAAI,GACVG,EAAGV,EAAGU,EAAI,GACVC,KAAM,WAER,OAAOtB,KAAK2I,SAASJ,IACnBvI,KAAK2I,SAASH,IACdxI,KAAK2I,SAASF,IACdzI,KAAK2I,SAASD,oCAGT/H,GAA2B,IAAAiI,EACnB5I,KAAKwH,YAAY7G,GAAzBO,EAD2B0H,EAC3B1H,EAAGG,EADwBuH,EACxBvH,EACJwF,EAAS7G,KAAKa,MAAMyD,UAAUwC,QACpC,OAAc,MAAVD,IACG3F,GAAK,GAAKA,GAAK2F,EAAOE,OAAS1F,GAAK,GAAKA,GAAKwF,EAAOG,eAvO3C9C,IAAMC,WA2OZxE,IC7XAkJ,EAJO,WACpB,OAAO/E,EAAAC,EAAAC,cAAC6C,EAAD,OCOWiC,QACW,cAA7B9F,OAAOC,SAAS8F,UAEe,UAA7B/F,OAAOC,SAAS8F,UAEhB/F,OAAOC,SAAS8F,SAASC,MACvB,2DCZNC,IAASC,OAAOpF,EAAAC,EAAAC,cAACmF,EAAD,MAASC,SAASC,eAAe,SDmI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.55d7a785.chunk.js","sourcesContent":["import React from 'react';\n\ntype PhysicalPoint = {\n  x: number,\n  y: number,\n  type: \"physical\"\n}\n\ntype LogicalPoint = {\n  x: number,\n  y: number,\n  type: \"logical\"\n}\n\ntype Move = LogicalPoint & {\n  player: \"x\" | \"o\"\n}\n\ntype CanvasContainerState = {\n  n: number\n  rAF: null | number\n  center: LogicalPoint\n  scale: number\n  moves: Move[]\n  ws: WebSocket\n}\n\nclass CanvasContainer extends React.Component<any, CanvasContainerState> {\n\n  constructor(props : any) {\n    super(props);\n    console.log(window.location)\n    this.state = {\n      n: 5,\n      rAF: null,\n      center: {\n        x: 0, y: 0, type: \"logical\"\n      },\n      scale: 1.0,\n      moves: [{\n        player: \"x\",\n        x: 0,\n        y: 0,\n        type: \"logical\"\n      }],\n      ws: new WebSocket(\"ws://\" + window.location.host + \"/ws\")\n    };\n  }\n\n  componentDidMount() {\n\n    const { ws } = this.state\n\n    ws.onopen = () => {\n      console.log('connected')\n    }\n\n    ws.onmessage = evt => {      \n      const message = JSON.parse(evt.data)\n      const { game_id, moves } = message;\n      this.setState({moves : moves})\n    }\n\n    ws.onclose = () => {\n      console.log('disconnected')\n      // automatically try to reconnect on connection loss\n      this.setState({\n        ws: new WebSocket(\"ws://\" + window.location.host + \"/ws\"),\n      })\n    }\n\n    // this.setState({rAF: requestAnimationFrame(this.updateAnimationState)});\n  }\n\n  updateAnimationState = () => {\n    this.setState(prevState => ({ n: prevState.n }));\n    this.setState({rAF: requestAnimationFrame(this.updateAnimationState)});    \n  }\n\n  componentWillUnmount() {\n    if (this.state.rAF !== null) {\n      cancelAnimationFrame(this.state.rAF);\n    }\n  }\n\n  click = (pt: LogicalPoint) => {\n    var x_next = true\n    if (this.state.moves.length > 0 && this.state.moves[this.state.moves.length - 1].player == \"x\") {\n      x_next = false\n    }\n    const move : Move = {\n      player: x_next ? \"x\" : \"o\",\n      x: Math.floor(pt.x + 0.5),\n      y: Math.floor(pt.y + 0.5),\n      type: \"logical\"\n    }\n\n    // Check if this square is occupied\n    for (let prevMove of this.state.moves) {\n      if (Math.floor(prevMove.x + 0.5) == Math.floor(move.x + 0.5) && \n          Math.floor(prevMove.y + 0.5) == Math.floor(move.y + 0.5)) {\n            return;\n      }\n    }\n\n    this.setState({\n      moves: this.state.moves.concat([move])\n    });\n\n    const message = {\n      player: move.player,\n      x: move.x,\n      y: move.y\n    }\n    this.state.ws.send(JSON.stringify(message))\n  }\n\n  render() {\n    return <Canvas\n            scale={this.state.scale}\n            center={this.state.center}\n            moveCenter={this.moveCenter}\n            moves={this.state.moves}\n            click={this.click}/>;\n  }\n\n  moveCenter = (displacement: LogicalPoint) => {\n    this.setState({\n      center: {\n        x: this.state.center.x + displacement.x,\n        y: this.state.center.y + displacement.y,\n        type: \"logical\"\n      }\n    })\n  }\n}\n\ntype CanvasProps = {\n  center: LogicalPoint,\n  scale: number,\n  moveCenter: (displacement: LogicalPoint) => void,\n  moves: Move[],\n  click: (pt: LogicalPoint) => void\n}\n\ntype CanvasState = {\n  mouseDown : boolean;\n  mouseMoved: boolean;\n  canvasRef : React.RefObject<HTMLCanvasElement>;\n  delta : number;\n  initialOffset : PhysicalPoint;\n  previousTouch : null | PhysicalPoint;\n}\n\nclass Canvas extends React.Component<CanvasProps, CanvasState> {\n\n  /**\n   * The Canvas is responsible for all conversions between mouse\n   * coordinates and the logical coordinate grid. \n   */\n\n  constructor(props: CanvasProps) {\n    super(props);\n    this.state = {\n      canvasRef: React.createRef(),\n      mouseDown: false,\n      mouseMoved: false,\n      delta: 50,\n      previousTouch: null,\n      initialOffset: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2,\n        type: \"physical\"\n      }\n    }; // TODO verify this assumption that the mouse is up\n  }\n\n  handleMouseDown() {\n    this.setState({mouseDown: true, mouseMoved: false})\n  }\n\n  handleMouseMove(e : React.MouseEvent<HTMLCanvasElement, MouseEvent>) {\n    this.setState({mouseMoved: true})\n    if (this.state.mouseDown) {\n      this.props.moveCenter({x: e.movementX / this.state.delta, y: e.movementY / this.state.delta, type: \"logical\"})\n    }\n  }\n\n  handleMouseUp(e : React.MouseEvent<HTMLCanvasElement, MouseEvent>) {\n    this.setState({mouseDown: false})\n  }\n\n  handleDoubleClick(e : React.MouseEvent<HTMLCanvasElement, MouseEvent>) {\n    // if (!this.state.mouseMoved) {\n    this.props.click(this.phys_to_log({\n      x: e.clientX,\n      y: e.clientY,\n      type: \"physical\"\n    }))\n    // }\n  }\n\n  handleTouchMove(e: React.TouchEvent) {\n    this.setState({mouseMoved: true})\n    e.preventDefault();\n    if (this.state.previousTouch != null) {\n      const dx = e.touches[0].clientX - this.state.previousTouch.x;\n      const dy = e.touches[0].clientY - this.state.previousTouch.y;\n      this.setState({previousTouch : {\n        x: e.touches[0].clientX,\n        y: e.touches[0].clientY,\n        type: \"physical\"\n      }})\n      this.props.moveCenter({\n        x: dx * 1.0 / this.state.delta,\n        y: dy * 1.0 / this.state.delta,\n        type: \"logical\"\n      })\n    } else {\n      this.setState({previousTouch : {\n        x: e.touches[0].clientX,\n        y: e.touches[0].clientY,\n        type: \"physical\"\n      }})\n    }\n    \n  }\n\n  handleTouchStart(e: React.TouchEvent) {\n    this.setState({previousTouch : {\n      x: e.touches[0].clientX,\n      y: e.touches[0].clientY,\n      type: \"physical\"\n    }})\n  }\n\n  handleTouchEnd(e: React.TouchEvent) {\n    this.setState({previousTouch : null})\n    if (!this.state.mouseMoved && this.state.previousTouch != null) {\n      this.props.click(this.phys_to_log({\n        x: this.state.previousTouch.x,\n        y: this.state.previousTouch.y,\n        type: \"physical\"\n      }))\n    }\n  }\n\n  handleWheel(e : React.WheelEvent<HTMLCanvasElement>){\n    if (e.deltaY > 0) {\n      this.setState({delta: this.state.delta + 1})\n    } else if (e.deltaY < 0 && this.state.delta > 20) {\n      this.setState({delta: this.state.delta - 1})\n    }\n  }\n\n  render() {\n    return <canvas\n            ref={this.state.canvasRef}\n            onMouseDown={this.handleMouseDown.bind(this)}\n            onMouseMove={this.handleMouseMove.bind(this)}\n            onMouseUp={this.handleMouseUp.bind(this)}\n            onTouchStart={this.handleTouchStart.bind(this)}\n            onTouchMove={this.handleTouchMove.bind(this)}\n            onTouchEnd={this.handleTouchEnd.bind(this)}\n            onDoubleClick={this.handleDoubleClick.bind(this)}\n            onWheel={this.handleWheel.bind(this)}\n            />;\n  }\n\n  componentDidMount() {\n    this.draw()\n  }\n  componentDidUpdate() {\n    this.draw()\n  }\n\n  draw() {\n    const canvas = this.state.canvasRef.current;\n    if (canvas == null) return;\n    canvas.width = window.innerWidth; //document.width is obsolete\n    canvas.height = window.innerHeight; //document.height is obsolete\n    const ctx = canvas.getContext(\"2d\");\n    if (ctx == null) return;\n\n    const { center } = this.props;\n\n    const delta = this.state.delta / this.props.scale;\n\n    for (var x = (center.x % 1 - 0.5) * delta + this.state.initialOffset.x % delta; x < canvas.width; x += delta) {\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, canvas.height);\n      ctx.stroke();\n    }\n    for (var y = (center.y % 1 - 0.5) * delta + this.state.initialOffset.y % delta;  y < canvas.height; y += delta) {\n      ctx.beginPath();\n      ctx.moveTo(0, y);\n      ctx.lineTo(canvas.width, y);\n      ctx.stroke();\n    }\n\n    if (this.props.moves.length > 0) {\n      const {x, y} = this.log_to_phys(this.props.moves[this.props.moves.length - 1])\n      ctx.fillStyle = \"#00FFFF\";\n      ctx.fillRect(1 + x - delta / 2, 1 + y - delta / 2, delta - 2, delta - 2);\n    }\n\n    for (let pt of this.props.moves) {\n      if (!this.nearScreen(pt)) continue;\n      const {x, y} = this.log_to_phys(pt);\n      const k = 20 * delta/75\n\n      if (pt.player == \"x\") {\n        ctx.beginPath();\n        ctx.moveTo(x - k, y - k);\n        ctx.lineTo(x + k, y + k);\n\n        ctx.moveTo(x + k, y - k);\n        ctx.lineTo(x - k, y + k);\n        ctx.stroke();\n      } else if (pt.player == \"o\") {\n        ctx.beginPath();\n        ctx.arc(x, y, 0.3 * delta, 0, 2 * Math.PI);\n        ctx.stroke();\n      }\n    }\n  }\n\n  log_to_phys(pt: LogicalPoint): PhysicalPoint {\n    const {center} = this.props;\n    const {delta, initialOffset} = this.state;\n    const canvas = this.state.canvasRef.current;\n    if (canvas == null) return {x: 0, y: 0, type: \"physical\"};\n\n    return {\n      x: (center.x + pt.x) * delta + initialOffset.x,\n      y: (center.y + pt.y) * delta + initialOffset.y,\n      type: \"physical\"\n    }\n  }\n\n  phys_to_log(pt: PhysicalPoint): LogicalPoint {\n    const {center} = this.props;\n    const {delta, initialOffset} = this.state;\n    const canvas = this.state.canvasRef.current;\n    if (canvas == null) return {x: 0, y: 0, type: \"logical\"};\n\n    return {\n      x: ((pt.x - initialOffset.x) / delta) - center.x,\n      y: ((pt.y - initialOffset.y) / delta) - center.y,\n      type: \"logical\"\n    }\n  }\n\n  nearScreen(pt: LogicalPoint) {\n    const topLeft: LogicalPoint = {\n      x: pt.x - 0.5,\n      y: pt.y - 0.5,\n      type: \"logical\"\n    }\n    const topRight: LogicalPoint = {\n      x: pt.x + 0.5,\n      y: pt.y - 0.5,\n      type: \"logical\"\n    }\n    const bottomLeft: LogicalPoint = {\n      x: pt.x - 0.5,\n      y: pt.y + 0.5,\n      type: \"logical\"\n    }\n    const bottomRight: LogicalPoint = {\n      x: pt.x + 0.5,\n      y: pt.y + 0.5,\n      type: \"logical\"\n    }\n    return this.onScreen(topLeft) ||\n      this.onScreen(topRight) ||\n      this.onScreen(bottomLeft) ||\n      this.onScreen(bottomRight)\n  }\n\n  onScreen(pt: LogicalPoint): boolean {\n    const {x, y} = this.log_to_phys(pt);\n    const canvas = this.state.canvasRef.current;\n    if (canvas == null) return false;\n    return x >= 0 && x <= canvas.width && y >= 0 && y <= canvas.height;\n  }\n\n}\nexport default CanvasContainer","import React from 'react';\nimport './App.css';\nimport CanvasContainer from './canvas';\n\nconst App: React.FC = () => {\n  return <CanvasContainer />\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}